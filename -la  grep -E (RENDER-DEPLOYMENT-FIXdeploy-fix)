warning: in the working copy of 'kelmah-frontend/src/App.jsx', LF will be replaced by CRLF the next time Git touches it
warning: in the working copy of 'kelmah-frontend/src/modules/admin/pages/SkillsAssessmentManagement.jsx', LF will be replaced by CRLF the next time Git touches it
[1mdiff --git a/kelmah-frontend/src/App.jsx b/kelmah-frontend/src/App.jsx[m
[1mindex d8310de..883a741 100644[m
[1m--- a/kelmah-frontend/src/App.jsx[m
[1m+++ b/kelmah-frontend/src/App.jsx[m
[36m@@ -55,6 +55,7 @@[m [mimport publicRoutes from './routes/publicRoutes';[m
 import { ContractProvider } from './modules/contracts/contexts/ContractContext';[m
 import WorkerRoutes from './routes/workerRoutes';[m
 import HirerRoutes from './routes/hirerRoutes';[m
[32m+[m[32mimport AdminRoutes from './routes/adminRoutes';[m
 import ForgotPasswordPage from './modules/auth/pages/ForgotPasswordPage';[m
 import ResetPasswordPage from './modules/auth/pages/ResetPasswordPage';[m
 import VerifyEmailPage from './modules/auth/pages/VerifyEmailPage';[m
[36m@@ -275,26 +276,13 @@[m [mconst AppContent = () => {[m
             } [m
           />[m
 [m
[31m-          {/* Worker and Hirer routes */}[m
[32m+[m[32m          {/* Worker, Hirer, and Admin routes */}[m
           <>[m
             {WorkerRoutes()}[m
             {HirerRoutes()}[m
[32m+[m[32m            {AdminRoutes()}[m
           </>[m
 [m
[31m-          {/* Admin routes */}[m
[31m-            <Route [m
[31m-            path="/admin/skills"[m
[31m-              element={[m
[31m-              <ProtectedRoute[m
[31m-                isAllowed={isAuthenticated && hasRole(user, 'admin')}[m
[31m-                redirectPath="/login"[m
[31m-                loading={loading}[m
[31m-              >[m
[31m-                <SkillsAssessmentPage />[m
[31m-              </ProtectedRoute>[m
[31m-            }[m
[31m-          />[m
[31m-[m
           {/* Contract routes */}[m
             <Route [m
             path="/contracts"[m
[1mdiff --git a/kelmah-frontend/src/modules/admin/pages/SkillsAssessmentManagement.jsx b/kelmah-frontend/src/modules/admin/pages/SkillsAssessmentManagement.jsx[m
[1mindex 1e06414..6b66d02 100644[m
[1m--- a/kelmah-frontend/src/modules/admin/pages/SkillsAssessmentManagement.jsx[m
[1m+++ b/kelmah-frontend/src/modules/admin/pages/SkillsAssessmentManagement.jsx[m
[36m@@ -25,30 +25,19 @@[m [mimport {[m
   InputLabel,[m
   Alert,[m
   CircularProgress,[m
[31m-  Skeleton,[m
[32m+[m[32m  Card,[m
[32m+[m[32m  CardContent,[m
   Tabs,[m
   Tab,[m
   Divider,[m
[31m-  FormControlLabel,[m
[31m-  Switch,[m
[31m-  Card,[m
[31m-  CardContent,[m
[31m-  Tooltip,[m
[31m-  InputAdornment,[m
 } from '@mui/material';[m
 import {[m
   Add as AddIcon,[m
   Delete as DeleteIcon,[m
   Edit as EditIcon,[m
   Visibility as ViewIcon,[m
[31m-  LibraryAdd as CloneIcon,[m
[31m-  School as SchoolIcon,[m
   Assessment as AssessmentIcon,[m
[31m-  BarChart as BarChartIcon,[m
[31m-  Help as HelpIcon,[m
[31m-  Search as SearchIcon,[m
[31m-  AddCircle as AddCircleIcon,[m
[31m-  Delete as RemoveIcon,[m
[32m+[m[32m  School as SchoolIcon,[m
 } from '@mui/icons-material';[m
 import axios from 'axios';[m
 import { useAuth } from '../../../modules/auth/contexts/AuthContext';[m
[36m@@ -78,1804 +67,200 @@[m [mfunction TabPanel(props) {[m
 const SkillsAssessmentManagement = () => {[m
   const { user } = useAuth();[m
   const [tabValue, setTabValue] = useState(0);[m
[31m-  [m
[31m-  // States for tests management[m
   const [tests, setTests] = useState([]);[m
   const [loading, setLoading] = useState(false);[m
   const [error, setError] = useState(null);[m
[31m-  const [openDialog, setOpenDialog] = useState(false);[m
[31m-  const [currentTest, setCurrentTest] = useState(null);[m
[31m-  const [searchQuery, setSearchQuery] = useState('');[m
[31m-  const [selectedCategory, setSelectedCategory] = useState('all');[m
[31m-  [m
[31m-  // States for test form[m
[31m-  const [formData, setFormData] = useState({[m
[31m-    title: '',[m
[31m-    description: '',[m
[31m-    skillCategory: '',[m
[31m-    timeLimit: 30,[m
[31m-    passingScore: 70,[m
[31m-    isActive: true,[m
[31m-    questions: [][m
[31m-  });[m
[31m-  [m
[31m-  // States for metrics[m
[31m-  const [metrics, setMetrics] = useState({[m
[31m-    totalTests: 0,[m
[31m-    totalAssessmentsTaken: 0,[m
[31m-    passRate: 0,[m
[31m-    popularSkills: [],[m
[31m-    certificationsByMonth: [][m
[31m-  });[m
[31m-  [m
[31m-  const [categories, setCategories] = useState([]);[m
[31m-  const [openQuestionDialog, setOpenQuestionDialog] = useState(false);[m
[31m-  const [currentQuestionIndex, setCurrentQuestionIndex] = useState(-1);[m
[31m-  const [questionFormData, setQuestionFormData] = useState({[m
[31m-    text: '',[m
[31m-    imageUrl: '',[m
[31m-    options: [[m
[31m-      { text: '', isCorrect: false },[m
[31m-      { text: '', isCorrect: false },[m
[31m-      { text: '', isCorrect: false },[m
[31m-      { text: '', isCorrect: false }[m
[31m-    ][m
[31m-  });[m
[31m-  [m
[31m-  // Load initial data[m
[31m-  useEffect(() => {[m
[31m-    fetchTests();[m
[31m-    fetchCategories();[m
[31m-    if (tabValue === 2) {[m
[31m-      fetchMetrics();[m
[31m-    }[m
[31m-  }, [tabValue]);[m
[31m-  [m
[31m-  // Handle tab change[m
[31m-  const handleTabChange = (event, newValue) => {[m
[31m-    setTabValue(newValue);[m
[31m-  };[m
[31m-  [m
[31m-  // Fetch tests[m
[31m-  const fetchTests = async () => {[m
[31m-    setLoading(true);[m
[31m-    setError(null);[m
[31m-    [m
[31m-    try {[m
[31m-      const response = await axios.get(`${API_URL}/admin/skills/tests`, {[m
[31m-        headers: { Authorization: `Bearer ${localStorage.getItem('token')}` }[m
[31m-      });[m
[31m-      [m
[31m-      setTests(response.data.data);[m
[31m-      [m
[31m-    } catch (err) {[m
[31m-      console.error('Error fetching tests:', err);[m
[31m-      setError('Failed to load tests. Please try again.');[m
[31m-    } finally {[m
[31m-      setLoading(false);[m
[31m-    }[m
[31m-  };[m
[31m-  [m
[31m-  // Fetch skill categories[m
[31m-  const fetchCategories = async () => {[m
[31m-    try {[m
[31m-      const response = await axios.get(`${API_URL}/skills/categories`, {[m
[31m-        headers: { Authorization: `Bearer ${localStorage.getItem('token')}` }[m
[31m-      });[m
[31m-      [m
[31m-      setCategories(response.data.data);[m
[31m-      [m
[31m-    } catch (err) {[m
[31m-      console.error('Error fetching categories:', err);[m
[31m-    }[m
[31m-  };[m
[31m-  [m
[31m-  // Fetch metrics[m
[31m-  const fetchMetrics = async () => {[m
[31m-    setLoading(true);[m
[31m-    setError(null);[m
[31m-    [m
[31m-    try {[m
[31m-      const response = await axios.get(`${API_URL}/admin/skills/metrics`, {[m
[31m-        headers: { Authorization: `Bearer ${localStorage.getItem('token')}` }[m
[31m-      });[m
[31m-      [m
[31m-      setMetrics(response.data.data);[m
[31m-      [m
[31m-    } catch (err) {[m
[31m-      console.error('Error fetching metrics:', err);[m
[31m-      setError('Failed to load metrics. Please try again.');[m
[31m-    } finally {[m
[31m-      setLoading(false);[m
[31m-    }[m
[31m-  };[m
[31m-  [m
[31m-  // Create or update test[m
[31m-  const handleSaveTest = async () => {[m
[31m-    setLoading(true);[m
[31m-    setError(null);[m
[31m-    [m
[31m-    try {[m
[31m-      if (currentTest) {[m
[31m-        // Update existing test[m
[31m-        await axios.put([m
[31m-          `${API_URL}/admin/skills/tests/${currentTest.id}`,[m
[31m-          formData,[m
[31m-          { headers: { Authorization: `Bearer ${localStorage.getItem('token')}` } }[m
[31m-        );[m
[31m-      } else {[m
[31m-        // Create new test[m
[31m-        await axios.post([m
[31m-          `${API_URL}/admin/skills/tests`,[m
[31m-          formData,[m
[31m-      
Kelmah Console Error Trace Audit — October 9, 2025
===================================================

1. Worker Availability Widget 500 (GET /api/users/workers/:workerId/availability)
-------------------------------------------------------------------------------
- **Console signature:** `GET https://kelmah-api-gateway-qlyk.onrender.com/api/users/workers/6891595768c3cdade00f564f/availability 500 (Internal Server Error)`
- **Frontend flow:**
	- `kelmah-frontend/src/modules/worker/pages/WorkerDashboardPage.jsx`
	- `kelmah-frontend/src/modules/dashboard/components/worker/EnhancedWorkerDashboard.jsx`
	- `kelmah-frontend/src/modules/dashboard/components/worker/AvailabilityStatus.jsx`
	- `kelmah-frontend/src/modules/worker/services/workerService.js` → `getWorkerAvailability`
	- `kelmah-frontend/src/modules/common/services/axios.js` (request interceptors, auth headers)
- **API Gateway layer:**
	- `kelmah-backend/api-gateway/middlewares/auth.js` (JWT extraction)
	- `kelmah-backend/api-gateway/routes/user.routes.js` (authenticated proxy for `/workers/:workerId/availability`)
- **User service backend:**
	- `kelmah-backend/services/user-service/routes/user.routes.js` (applies `verifyGatewayRequest`, logs route access)
	- `kelmah-backend/services/user-service/controllers/worker.controller.js` → `getWorkerAvailability`
	- `kelmah-backend/services/user-service/config/db.js` (`ensureConnection` readiness guard)
	- `kelmah-backend/services/user-service/models/index.js` (`loadModels` hydrates service-scoped models)
	- `kelmah-backend/services/user-service/models/Availability.js` (Mongoose schema)
	- `kelmah-backend/shared/models/index.js` and `User.js` (shared user schema referenced by availability)
- **Database view:** MongoDB `availabilities` collection in `kelmah_platform`
- **Notes:** Controller now returns fallback payloads when MongoDB isn’t ready; monitor for residual 500s during cold starts.

2. Worker Profile Completion 500 (GET /api/users/workers/:workerId/completeness)
-------------------------------------------------------------------------------
- **Console signature:** `GET https://kelmah-api-gateway-qlyk.onrender.com/api/users/workers/6891595768c3cdade00f564f/completeness 500 (Internal Server Error)`
- **Frontend flow:**
	- `kelmah-frontend/src/modules/worker/pages/WorkerDashboardPage.jsx`
	- `kelmah-frontend/src/modules/dashboard/components/worker/EnhancedWorkerDashboard.jsx` (profile completion loader)
	- `kelmah-frontend/src/modules/dashboard/components/worker/ProfileCompletion.jsx`
	- `kelmah-frontend/src/modules/worker/services/workerService.js` → `getWorkerStats`
	- `kelmah-frontend/src/modules/common/services/axios.js`
- **API Gateway layer:**
	- `kelmah-backend/api-gateway/middlewares/auth.js`
	- `kelmah-backend/api-gateway/routes/user.routes.js` (proxy for `/workers/:workerId/completeness`)
- **User service backend:**
	- `kelmah-backend/services/user-service/routes/user.routes.js` (invokes `verifyGatewayRequest`)
	- `kelmah-backend/services/user-service/controllers/worker.controller.js` → `getProfileCompletion`
	- `kelmah-backend/services/user-service/config/db.js` (`ensureConnection` readiness checks)
	- `kelmah-backend/services/user-service/models/index.js`
	- `kelmah-backend/services/user-service/models/WorkerProfileMongo.js`
	- `kelmah-backend/shared/models/User.js`
- **Database view:** MongoDB `users` and `workerprofiles` collections in `kelmah_platform`
- **Notes:** Controller merges `User` and `WorkerProfile` documents and serves fallback data when Mongo warm-up delays persist.

3. Worker Recent Jobs 401 (GET /api/users/workers/jobs/recent?limit=6)
---------------------------------------------------------------------
- **Console signature:** `GET https://kelmah-api-gateway-qlyk.onrender.com/api/users/workers/jobs/recent?limit=6 401 (Unauthorized)`
- **Frontend flow:**
	- `kelmah-frontend/src/modules/worker/pages/WorkerDashboardPage.jsx`
	- `kelmah-frontend/src/modules/dashboard/components/worker/EnhancedWorkerDashboard.jsx` (recent jobs loader)
	- `kelmah-frontend/src/modules/worker/services/workerService.js` → `getWorkerJobs`
	- `kelmah-frontend/src/modules/common/services/axios.js`
- **API Gateway layer:**
	- `kelmah-backend/api-gateway/middlewares/auth.js`
	- `kelmah-backend/api-gateway/routes/user.routes.js` (authenticated proxy for `/workers/jobs/recent`)
- **User service backend:**
	- `kelmah-backend/services/user-service/routes/user.routes.js` (now includes `verifyGatewayRequest` for this route)
	- `kelmah-backend/services/user-service/controllers/worker.controller.js` → `getRecentJobs`
	- `kelmah-backend/services/user-service/config/db.js`
- **Job service dependency:**
	- `kelmah-backend/services/job-service/routes/job.routes.js` (protected worker-facing endpoints)
	- `kelmah-backend/services/job-service/controllers/job.controller.js` (expected `/worker/recent` handler — currently missing, forcing fallback data)
- **Database view:** MongoDB `jobs` collection via job-service (`kelmah_platform`)
- **Notes:** 401 occurs when gateway-auth headers are absent or `req.user` is unset; controller falls back to mock jobs if job-service call fails.

4. Notifications WebSocket Handshake Failure
---------------------------------------------
- **Console signature:** `WebSocket connection to '<URL>' failed: WebSocket is closed before the connection is established.`
- **Frontend flow:**
	- `kelmah-frontend/src/modules/notifications/contexts/NotificationContext.jsx`
	- `kelmah-frontend/src/modules/notifications/services/notificationService.js` (socket.io client setup)
	- `kelmah-frontend/src/utils/secureStorage.js` (JWT retrieval for handshake)
- **API Gateway layer:**
	- `kelmah-backend/api-gateway/server.js` (`/socket.io` proxy with health/error handling)
	- `kelmah-backend/api-gateway/middlewares/auth.js` (propagates auth headers to messaging service)
- **Messaging service backend:**
	- `kelmah-backend/services/messaging-service/server.js` (Socket.IO server, CORS, auth middleware)
	- `kelmah-backend/services/messaging-service/middlewares/auth.middleware.js` (token verification)
	- `kelmah-backend/services/messaging-service/socket/messageSocket.js` (connection handling, event wiring)
	- `kelmah-backend/services/messaging-service/routes/notification.routes.js` (REST fallbacks used by polling)
- **Database view:** MongoDB `notifications`, `messages`, and `conversations` collections in `kelmah_platform`
- **Notes:** Ensure runtime WebSocket URL aligns with current LocalTunnel/Render endpoint and that secure storage returns a non-null token before connecting.
